(Background:can skip We will use hololens as our interface and our interface will be the improved the operation 
system by importing MR API extra and make additional applicaton to support our softwear 
and make sure every functions will be there and help the asturantant to do the mission
without interruption and enhance the spacesuit's refine like gesture helper to help
the asturant accomplish the eva task.)
https://docs.microsoft.com/en-us/windows/mixed-reality/app-model

0)Interface

For our implementation we will use the hololens 1. We will create our environment by using the hololens API 
to modify the existing software which will allow us to create a more convincing simulation. 
We will also use the hololens API to assist with fine-tuning the astronauts gestures.


hololens(HMD) -- os api --  functions package implement
                            (1)spacesuit vitals(2)interaction with port (3)Navigation (4)sampling (5) rovers repair 
                            (6)general function:camera/lighting/timer
                         -- additonal sensor/pocket clickers/flash light
                         
 ***Hardware accessories:
 https://docs.microsoft.com/en-us/windows/mixed-reality/hardware-accessories
 ***Handfree:
 https://docs.microsoft.com/en-us/windows/mixed-reality/hands-free
                     
1)Spacesuit Vital works after setting up in IVA and "without the interruption" of asturant's mission in the EVA

In order to monitor an astronauts vitals we will create a program that will be unobtrusive to the astronaut and 
will ensure every vitals("air pressure,o2 level,temperature,fan function,emergency control ") meet aspecified 
standard (shows Green) in IVA)(before EVA departure).In EVA, the program will update in real-time (monitor) and display 
them on the top of interface without interruption.
It will also report a warning if the atronauts vitals fall below any specified threshold. The astronauts vitals 
will be displayed based off of a 3 color-coded system.It will remind the asturant with the small flash reminder windows 
on the left corner when the level or function is down with yellow labels. 
Green represents the astronauts vitals are within a safe range;yellow will serve as a warning to the astronaut
;red will alert the astronaut thathe/she is operating within a emergency situation and that they need to return 
to the rover and "establish communications" with ground control for further instructions. It will bubble a red 
warning window to require asturant to turn back soon and start the communication function to give the asturant 
more instruction if needed.


***Declare background tasks in the application manifest:
https://docs.microsoft.com/en-us/windows/mixed-reality/app-model
https://docs.microsoft.com/en-us/windows/uwp/launch-resume/declare-background-tasks-in-the-application-manifest


2)Successful communication between an astronaut and ground control without interruption

For successful communication between an astronaut and ground control or a vehicle, all 
parties must take on a client / server role during communication.  
In order for a server to communicate with an outside party he must receive and accept a 
request for communication. Each acting party will be assigned a unique identifier, or â€˜
channel which the distant end must know in order to request communication.  
When a party is not actively communicating with an individual, they will switch to a 
default mode server mode where they will constantly be 
listening for a communications request.  

In order to implement this protocol programmatically we will use the sockets library in 
conjunction with the select library using C#. This will allow for full duplex communication 
and will also allow for an astronaut to communicate with more than one client.

https://docs.microsoft.com/en-us/windows/uwp/launch-resume/discover-remote-devices










